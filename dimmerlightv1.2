blueprint:
  name: 'REMOTE: Tradfri Wireless Dimmer for light'
  description: |
    Control light with IKEA ICTC-G-1 Tradfri Wireless Dimmer
    Usage:
    rotation right/left with stop: turn on/off light
    rotation right: dim up light
    rotation left: dim down light
  domain: automation
  input:
    remote:
      name: Tradfri Wireless Dimmer
      description: 'ZHA: Tradfri Wireless Dimmer to use (IKEA ICTC-G-1)'
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: TRADFRI wireless dimmer
          multiple: false
    light:
      name: Light
      description: Light to control with Tradfri Wireless Dimmer
      selector:
        entity:
          domain: light
          multiple: false
mode: restart
max_exceeded: silent
variables:
  LIGHT: light.bed  # Replace with your specific entity ID for the light
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote
action:
  - choose:
      - conditions: "{{ trigger.event.data.command == 'move_to_level_with_on_off' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ LIGHT }}"
            data:
              brightness: "{{ trigger.event.data.params.level }}"
      - conditions: "{{ trigger.event.data.command == 'move_with_on_off' }}"
        sequence:
          - choose:
              - conditions: "{{ trigger.event.data.params.rate < 0 }}"
                sequence:
                  - repeat:
                      count: "{{ -trigger.event.data.params.rate // 50 }}"
                      sequence:
                        - service: light.turn_on
                          target:
                            entity_id: "{{ LIGHT }}"
                          data:
                            brightness_step: -50
                            transition: 0.3
                        - delay:
                            milliseconds: 300
              - conditions: "{{ trigger.event.data.params.rate > 0 }}"
                sequence:
                  - repeat:
                      count: "{{ trigger.event.data.params.rate // 50 }}"
                      sequence:
                        - service: light.turn_on
                          target:
                            entity_id: "{{ LIGHT }}"
                          data:
                            brightness_step: 50
                            transition: 0.3
                        - delay:
                            milliseconds: 300
      - conditions: "{{ trigger.event.data.command == 'move' }}"
        sequence:
          - choose:
              - conditions: "{{ trigger.event.data.params.rate == -254 }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: "{{ LIGHT }}"
              - conditions: "{{ trigger.event.data.params.rate == 254 }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ LIGHT }}"
                    data:
                      brightness_step: "{{ trigger.event.data.params.rate | float / 254 * 100 }}"
                      transition: 0.5
                  - delay:
                      seconds: 0.5
