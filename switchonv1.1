blueprint:
  name: Motion Controlled Switch
  description: Turn a switch on based on detected motion and turn off after a set duration, with optional time restriction
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: A sensor that detects motion
      selector:
        entity:
          domain: binary_sensor
    switch:
      name: Switch
      description: A switch that is turned on and off
      selector:
        entity:
          domain: switch
    duration:
      name: Duration
      description: How long the light should stay on for, after motion is detected, before turning off (defaults to 120 seconds)
      default: '0:02:00'
    time_restriction:
      name: Only activate during free energy time
      description: Only activate the automation between 8 PM and 6 AM
      default: false
    snooze:
      name: Enable Snooze
      description: Pause light activation for 1 hour when enabled
      default: false

trigger:
  - platform: state
    entity_id: !input motion_sensor
    to: 'on'
  - platform: state
    entity_id: !input motion_sensor
    to: 'off'
    for: !input duration

condition:
  - condition: template
    value_template: >
      {% if is_state('input_boolean.time_restriction', 'on') %}
        {% set current_time = now().time() %}
        {% set start_time = strptime('20:00', '%H:%M').time() %}
        {% set end_time = strptime('06:00', '%H:%M').time() %}
        {{ current_time >= start_time or current_time < end_time }}
      {% else %}
        true
      {% endif %}
  - condition: template
    value_template: >
      {% if is_state('input_boolean.snooze', 'on') %}
        {% set snooze_end_time = (now() - timedelta(hours=1)).timestamp() %}
        {{ as_timestamp(states.automation.motion_controlled_lighting_with_phasing_effect.attributes.last_triggered) < snooze_end_time }}
      {% else %}
        true
      {% endif %}

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input motion_sensor
            state: 'on'
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input switch
      - conditions:
          - condition: state
            entity_id: !input motion_sensor
            state: 'off'
            for: !input duration
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input switch

mode: restart
