blueprint:
  name: Motion-activated Light with Phasing Effect and Auto-Off
  description: |
    Turn on lights with a phasing effect when motion is detected and turn off after a specified duration.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: The motion sensor triggering the light.
      selector:
        entity:
          domain: binary_sensor
    light_entity:
      name: Light Entity
      description: The light to control.
      selector:
        entity:
          domain: light
    delay_duration:
      name: Delay before turning off (seconds)
      description: The duration to wait before turning off the light after motion stops.
      default: 10
      selector:
        number:
          min: 0
          max: 600
          unit_of_measurement: seconds
  trigger:
    platform: state
    entity_id: !input 'motion_sensor'
    to: "on"
  variables:
    phasing_steps: 20
  action:
    - variables:
        phasing_time: "{{ 0.5 / (states('input_number.delay_duration') | float * phasing_steps) }}"
    - service: light.turn_on
      target:
        entity_id: !input 'light_entity'
      data:
        brightness_pct: 1
    - repeat:
        count: "{{ phasing_steps }}"
        sequence:
          - delay: "{{ phasing_time }}"
          - service: light.turn_on
            target:
              entity_id: !input 'light_entity'
            data:
              brightness_pct: "{{ ((repeat.index * (100 / phasing_steps)) | round(2)) | int }}"
    - delay: "{{ states('input_number.delay_duration') }}"
    - repeat:
        count: "{{ phasing_steps }}"
        sequence:
          - delay: "{{ phasing_time }}"
          - service: light.turn_on
            target:
              entity_id: !input 'light_entity'
            data:
              brightness_pct: "{{ ((100 - (repeat.index * (100 / phasing_steps))) | round(2)) | int }}"
    - service: light.turn_off
      target:
        entity_id: !input 'light_entity'
